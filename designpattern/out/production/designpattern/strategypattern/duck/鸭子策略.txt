鸭子的种类有很多
他们其中的fly和quack方法可能会有不同的实现，如果放在父类中让子类继承那么每当有一个新的子类就需要去重写这两个方法(可能)
为了避免这样的事情发生，我们将这两个需要被经常改变的方法分别放在两个接口中 这样就可以保证有这个功能的子类直接去实现这个接口而不必不断的去
覆写刚刚父类中所有的方法 但实际上 还是会导致代码无法复用的问题 虽然抽象了功能 但是可能还是需要不同的子类去实现不同的功能即 和刚刚的继承类似


设计原则:找到应用中可能变化之处 把他们独立出来 不要和那些不需要变化的代码混淆在一起

在这样的情况下 既然抽象出的接口还是要在子类中不断去做各自的实现那么现在就直接去写可能的实现类让鸭子去调用这些行为

设计原则:针对实现编程而不是针对实现编程